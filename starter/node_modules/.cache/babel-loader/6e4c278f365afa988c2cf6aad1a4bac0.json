{"ast":null,"code":"var _jsxFileName = \"/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ListBooks from \"./ListBooks\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  booksData,\n  onsetShowPage,\n  onUpdateBooksData\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearhResutls] = useState([]);\n\n  const updateQuery = event => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    if (query.length > 0) {\n      const searchBooks = async () => {\n        const res = await BooksAPI.search(query.trim(), 20);\n        setSearhResutls(res);\n      };\n\n      searchBooks();\n    }\n\n    return () => {\n      console.log(\"Cleanup called\");\n    };\n  }, [query]);\n  const datainShelf = booksData.filter(dataEntry => query === \"\" ? booksData : dataEntry.title.toLowerCase().includes(query.toLowerCase()));\n  const tempdata = searchResults.filter(searchResult => !datainShelf.some(bookentry => bookentry.id === searchResult.id));\n  const displayData = [...datainShelf, ...tempdata];\n  console.log(\"total data\", displayData);\n  console.log(\"data in shelf\", datainShelf);\n  console.log(\"search results from database\", searchResults);\n  console.log(\"filterd search \", tempdata);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: () => onsetShowPage(),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: e => {\n            updateQuery(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: query.length > 0 && /*#__PURE__*/_jsxDEV(ListBooks, {\n        booksData: displayData,\n        onUpdateBooksData: onUpdateBooksData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"O1z2IkNDuzW5B3iXrARqk1BgP0Y=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/Search.js"],"names":["useEffect","useState","ListBooks","BooksAPI","Search","booksData","onsetShowPage","onUpdateBooksData","query","setQuery","searchResults","setSearhResutls","updateQuery","event","target","value","length","searchBooks","res","search","trim","console","log","datainShelf","filter","dataEntry","title","toLowerCase","includes","tempdata","searchResult","some","bookentry","id","displayData","e"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ListBooks from \"./ListBooks\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst Search = ({ booksData, onsetShowPage, onUpdateBooksData }) => {\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearhResutls] = useState([]);\n\n  const updateQuery = (event) => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    if (query.length > 0) {\n      const searchBooks = async () => {\n        const res = await BooksAPI.search(query.trim(), 20);\n        setSearhResutls(res);\n      };\n      searchBooks();\n    }\n\n    return () => {\n      console.log(\"Cleanup called\");\n    };\n  }, [query]);\n\n  const datainShelf = booksData.filter((dataEntry) =>\n    query === \"\"\n      ? booksData\n      : dataEntry.title.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const tempdata = searchResults.filter(\n    (searchResult) =>\n      !datainShelf.some((bookentry) => bookentry.id === searchResult.id)\n  );\n\n  const displayData = [...datainShelf, ...tempdata];\n  console.log(\"total data\", displayData);\n\n  console.log(\"data in shelf\", datainShelf);\n  console.log(\"search results from database\", searchResults);\n  console.log(\"filterd search \", tempdata);\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <a className=\"close-search\" onClick={() => onsetShowPage()}>\n          Close\n        </a>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(e) => {\n              updateQuery(e);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        {query.length > 0 && (\n          <ListBooks\n            booksData={displayData}\n            onUpdateBooksData={onUpdateBooksData}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}