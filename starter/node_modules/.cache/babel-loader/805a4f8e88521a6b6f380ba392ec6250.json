{"ast":null,"code":"var _jsxFileName = \"/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport CurrentlyReading from \"./CurrentlyReading\";\nimport WantToRead from \"./WantToRead\";\nimport Read from \"./Read\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [booksData, setBooksData] = useState([]);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooksData(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const updateBooksData = (bookEntry, shelf) => {\n    let entryPresent = false;\n    BooksAPI.update(bookEntry, shelf);\n    setBooksData(booksData.map(book => {\n      if (book.id === bookEntry.id) {\n        book.shelf = shelf;\n        entryPresent = true;\n        return book;\n      } else {\n        return book;\n      }\n    }));\n\n    if (!entryPresent) {\n      bookEntry.shelf = shelf;\n      setBooksData(booksData => [...booksData, bookEntry]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {\n          booksData: booksData,\n          onUpdateBooksData: updateBooksData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-books-title\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"MyReads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-books-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(CurrentlyReading, {\n                booksData: booksData,\n                onUpdateBooksData: updateBooksData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(WantToRead, {\n                booksData: booksData,\n                onUpdateBooksData: updateBooksData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Read, {\n                booksData: booksData,\n                onUpdateBooksData: updateBooksData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"open-search\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/search\",\n              children: \"Add a book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uP9/ZRyWIuOdHO0yFmbZC6Ay5jc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/App.js"],"names":["useEffect","useState","Search","CurrentlyReading","WantToRead","Read","Link","Route","Routes","BooksAPI","App","booksData","setBooksData","getBooks","res","getAll","updateBooksData","bookEntry","shelf","entryPresent","update","map","book","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport CurrentlyReading from \"./CurrentlyReading\";\nimport WantToRead from \"./WantToRead\";\nimport Read from \"./Read\";\nimport { Link, Route, Routes } from \"react-router-dom\";\n\nimport * as BooksAPI from \"./BooksAPI\";\n\nfunction App() {\n  const [booksData, setBooksData] = useState([]);\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooksData(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const updateBooksData = (bookEntry, shelf) => {\n    let entryPresent = false;\n    BooksAPI.update(bookEntry, shelf);\n\n    setBooksData(\n      booksData.map((book) => {\n        if (book.id === bookEntry.id) {\n          book.shelf = shelf;\n          entryPresent = true;\n          return book;\n        } else {\n          return book;\n        }\n      })\n    );\n    if (!entryPresent) {\n      bookEntry.shelf = shelf;\n      setBooksData((booksData) => [...booksData, bookEntry]);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route\n          path=\"/search\"\n          element={\n            <Search booksData={booksData} onUpdateBooksData={updateBooksData} />\n          }\n        />\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n\n              <div className=\"list-books-content\">\n                <div>\n                  <CurrentlyReading\n                    booksData={booksData}\n                    onUpdateBooksData={updateBooksData}\n                  />\n                  <WantToRead\n                    booksData={booksData}\n                    onUpdateBooksData={updateBooksData}\n                  />\n                  <Read\n                    booksData={booksData}\n                    onUpdateBooksData={updateBooksData}\n                  />\n                </div>\n              </div>\n\n              <div className=\"open-search\">\n                <Link to=\"/search\">Add a book</Link>\n              </div>\n            </div>\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}