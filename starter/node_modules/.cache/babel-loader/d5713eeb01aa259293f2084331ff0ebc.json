{"ast":null,"code":"var _jsxFileName = \"/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/ShelfChanger.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShelfChanger = ({\n  bookentry,\n  onUpdateBooksData\n}) => {\n  _s();\n\n  //console.log(\"Book entry shelf in shelf changer:\", bookentry.shelf);\n  if (bookentry.shelf) {\n    console.log(bookentry.title, \"Book in shelf\");\n  } else {\n    console.log(bookentry.title, \"Book not in shelf\");\n  }\n\n  const [shelf, setShelf] = useState(bookentry.shelf);\n\n  const updateShelf = event => {\n    onUpdateBooksData(bookentry, event.target.value);\n    setShelf(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: shelf,\n      onChange: e => updateShelf(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        disabled: true,\n        children: \"Move to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShelfChanger, \"2pZEYXkT58Uvt4YO2M5WKlSuIZ4=\");\n\n_c = ShelfChanger;\nexport default ShelfChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShelfChanger\");","map":{"version":3,"sources":["/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/ShelfChanger.js"],"names":["useState","ShelfChanger","bookentry","onUpdateBooksData","shelf","console","log","title","setShelf","updateShelf","event","target","value","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAsC;AAAA;;AACzD;AAEA,MAAID,SAAS,CAACE,KAAd,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACK,KAAtB,EAA6B,eAA7B;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACK,KAAtB,EAA6B,mBAA7B;AACD;;AACD,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBR,QAAQ,CAACE,SAAS,CAACE,KAAX,CAAlC;;AAEA,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAC7BP,IAAAA,iBAAiB,CAACD,SAAD,EAAYQ,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAjB;AACAJ,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACE;AAAQ,MAAA,KAAK,EAAER,KAAf;AAAsB,MAAA,QAAQ,EAAGS,CAAD,IAAOJ,WAAW,CAACI,CAAD,CAAlD;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMZ,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\n\nconst ShelfChanger = ({ bookentry, onUpdateBooksData }) => {\n  //console.log(\"Book entry shelf in shelf changer:\", bookentry.shelf);\n\n  if (bookentry.shelf) {\n    console.log(bookentry.title, \"Book in shelf\");\n  } else {\n    console.log(bookentry.title, \"Book not in shelf\");\n  }\n  const [shelf, setShelf] = useState(bookentry.shelf);\n\n  const updateShelf = (event) => {\n    onUpdateBooksData(bookentry, event.target.value);\n    setShelf(event.target.value);\n  };\n\n  return (\n    <div className=\"book-shelf-changer\">\n      <select value={shelf} onChange={(e) => updateShelf(e)}>\n        <option value=\"none\" disabled>\n          Move to...\n        </option>\n        <option value=\"currentlyReading\">Currently Reading</option>\n        <option value=\"wantToRead\">Want to Read</option>\n        <option value=\"read\">Read</option>\n        <option value=\"none\">None</option>\n      </select>\n    </div>\n  );\n};\n\nexport default ShelfChanger;\n"]},"metadata":{},"sourceType":"module"}