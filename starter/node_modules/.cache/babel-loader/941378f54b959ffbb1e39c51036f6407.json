{"ast":null,"code":"var _jsxFileName = \"/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport CurrentlyReading from \"./CurrentlyReading\";\nimport WantToRead from \"./WantToRead\";\nimport Read from \"./Read\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [booksData, setBooksData] = useState([]); //const [dataToUpdateShelf, setDataToUpdateShelf] = useState([]);\n\n  const setShowPage = () => {\n    setShowSearchpage(!showSearchPage);\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooksData(res);\n    };\n\n    getBooks();\n  }, []);\n  console.log(booksData);\n\n  const updateBooksData = (bookEntry, shelf) => {\n    console.log(bookEntry);\n    console.log(bookEntry.shelf);\n    bookEntry.shelf = shelf;\n    console.log(bookEntry);\n    setBooksData(booksData.filter(dataEntry => dataEntry.id !== bookEntry.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(Search, {\n      booksData: booksData,\n      onsetShowPage: setShowPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CurrentlyReading, {\n            booksData: booksData,\n            onUpdateBooksData: updateBooksData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WantToRead, {\n            booksData: booksData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Read, {\n            booksData: booksData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4bfuDASQn0Z/0w7YkwyCaMt8mNg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zain/react_nano/project_1/nd0191-c1-myreads/starter/src/App.js"],"names":["useEffect","useState","Search","CurrentlyReading","WantToRead","Read","BooksAPI","App","showSearchPage","setShowSearchpage","booksData","setBooksData","setShowPage","getBooks","res","getAll","console","log","updateBooksData","bookEntry","shelf","filter","dataEntry","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CAFa,CAGb;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBH,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,MAAT,EAAlB;AACAJ,MAAAA,YAAY,CAACG,GAAD,CAAZ;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;;AAEA,QAAMQ,eAAe,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC5CJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAS,CAACC,KAAtB;AACAD,IAAAA,SAAS,CAACC,KAAV,GAAkBA,KAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AAEAR,IAAAA,YAAY,CACVD,SAAS,CAACW,MAAV,CAAkBC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBJ,SAAS,CAACI,EAA3D,CADU,CAAZ;AAGD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGf,cAAc,gBACb,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEE,SAAnB;AAA8B,MAAA,aAAa,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,SAAS,EAAEF,SADb;AAEE,YAAA,iBAAiB,EAAEQ;AAFrB;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMD,iBAAiB,CAAC,CAACD,cAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA3DQD,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport CurrentlyReading from \"./CurrentlyReading\";\nimport WantToRead from \"./WantToRead\";\nimport Read from \"./Read\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nfunction App() {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [booksData, setBooksData] = useState([]);\n  //const [dataToUpdateShelf, setDataToUpdateShelf] = useState([]);\n\n  const setShowPage = () => {\n    setShowSearchpage(!showSearchPage);\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooksData(res);\n    };\n\n    getBooks();\n  }, []);\n\n  console.log(booksData);\n\n  const updateBooksData = (bookEntry, shelf) => {\n    console.log(bookEntry);\n    console.log(bookEntry.shelf);\n    bookEntry.shelf = shelf;\n    console.log(bookEntry);\n\n    setBooksData(\n      booksData.filter((dataEntry) => dataEntry.id !== bookEntry.id)\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      {showSearchPage ? (\n        <Search booksData={booksData} onsetShowPage={setShowPage} />\n      ) : (\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n\n          <div className=\"list-books-content\">\n            <div>\n              <CurrentlyReading\n                booksData={booksData}\n                onUpdateBooksData={updateBooksData}\n              />\n              <WantToRead booksData={booksData} />\n              <Read booksData={booksData} />\n            </div>\n          </div>\n\n          <div className=\"open-search\">\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}